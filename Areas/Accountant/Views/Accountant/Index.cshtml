@{
    ViewData["Title"] = "Dashboard";
    Layout = "~/Views/Shared/_LayoutAccountant.cshtml";
}
@model Nexus_Manegement.Areas.Technical.ModelsView.ProfileView
<div class="main-content container-fluid">
    <div class="page-title">
        <h3><strong>Dashboard</strong></h3>
        <p class="text-subtitle text-muted">A good dashboard to display your statistics</p>
    </div>

    <section class="section">

        <div class="row mb-4">
            <div class="col-md-8">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-heading p-1 pl-3"><strong>My Profile</strong></h3>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-4 col-12">
                                <div class="pl-3">
                                    <img width="230px" height="auto" src="https://i.pinimg.com/564x/64/f1/8f/64f18f8c11fe15eb5400d45e1de40460.jpg" />

                                </div>
                            </div>
                            <div class="col-md-8 col-12">
                                <div class="form-group">
                                    <label for="disabledInput">Position</label>
                                    <input type="text" class="form-control" id="readonlyInputPos" name="posname" readonly value="@Model.PositionName">
                                </div>
                                <div class="form-group">
                                    <label for="disabledInput">Name</label>
                                    <input type="text" class="form-control" id="readonlyInputName" name="name" readonly value="@Model.Name">
                                </div>
                                <div class="form-group">
                                    <label for="disabledInput">Username</label>
                                    <input type="text" class="form-control" id="readonlyInputUser" name="username" readonly value="@Model.Username">
                                </div>
                                <div class="form-group">
                                    <label for="disabledInput">Email</label>
                                    <input type="text" class="form-control" id="readonlyInputEmail" name="email" readonly value="@Model.Email">
                                </div>
                                <div class="form-group">
                                    <label for="disabledInput">Phone</label>
                                    <input type="text" class="form-control" id="readonlyInputPhone" name="phone" readonly value="@Model.Phone">
                                </div>
                                <button class="btn icon btn-primary" id="btnChange" onclick="myFunction()">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit">
                                        <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                                        <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                                    </svg>
                                </button>

                                <button class="btn icon btn-primary" id="btnSaveChange" onclick="functionSave()">
                                    <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit">
                                        <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                                        <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                                    </svg>
                                    Save Change
                                </button>
                                <button class="btn btn-light" id="btnCancel" onclick="functionCancelProfile()">
                                    Cancel
                                </button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4">
                <div class="card ">
                    <div class="card-header">
                        <h4><strong>Change Password</strong></h4>
                    </div>
                    <div class="card-body" style="position: relative;">
                        <div class="form-group">
                            <label for="disabledInput">Password</label>
                            <input type="password" class="form-control" id="readonlyInputOldPass" name="oldPass" readonly value="">
                        </div>
                        <div class="invalid-feedback" id="alertMessPass">
                            <i class="bx bx-radio-circle"></i>
                            This is invalid state.
                        </div>
                        <div class="form-group">
                            <label for="disabledInput">New Password</label>
                            <input type="password" class="form-control" id="readonlyInputNewPass" name="newPass" readonly value="">
                        </div>
                        <div class="form-group">
                            <label for="disabledInput">ConfirmPass</label>
                            <input type="password" class="form-control" id="readonlyInputConfirmPass" name="confirmPass" readonly value="">
                        </div>
                        <div class="invalid-feedback" id="alertMess">
                            <i class="bx bx-radio-circle"></i>
                            This is invalid state.
                        </div>

                        <button class="btn icon btn-primary" id="btnChangePass" onclick="myFunctionPass()">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit">
                                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                                <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                            </svg>
                        </button>

                        <button class="btn icon btn-primary" id="btnSaveChangePass" onclick="functionSavePass()">
                            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-edit">
                                <path d="M11 4H4a2 2 0 0 0-2 2v14a2 2 0 0 0 2 2h14a2 2 0 0 0 2-2v-7"></path>
                                <path d="M18.5 2.5a2.121 2.121 0 0 1 3 3L12 15l-4 1 1-4 9.5-9.5z"></path>
                            </svg>
                            Save Change
                        </button>
                        <button class="btn btn-light" id="btnCancelPass" onclick="functionCancelPass()">
                            Cancel
                        </button>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-2">
            <div class="col-12 col-md-6">
                <div class="card card-statistic">
                    <div class="card-body p-0">
                        <div class="d-flex flex-column">
                            <div class="px-3 py-3 d-flex justify-content-between">
                                <h3 class="card-title">MONTHLY REVENUE</h3>
                                <div class="card-right d-flex align-items-center">
                                    <p>$ </p>
                                </div>
                            </div>
                            <div id="curve_chart"></div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 col-md-6">
                <div class="card card-statistic">
                    <div class="card-body p-0">
                        <div class="d-flex flex-column">
                            <div class="px-3 py-3 d-flex justify-content-between">
                                <h3 class="card-title">ORDER</h3>
                                <div class="card-right d-flex align-items-center">
                                    <p>@ViewBag.SumCountOrder </p>
                                </div>
                            </div>
                            <div id="order_chart"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mb-4">
            @*<div class="col-md-6">
            <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
            <h4 class="card-title">Orders New</h4>
            <div class="d-flex ">
            <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="feather feather-download"><path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path><polyline points="7 10 12 15 17 10"></polyline><line x1="12" y1="15" x2="12" y2="3"></line></svg>
            </div>
            </div>
            <div class="card-body px-0 pb-0">
            <div class="table-responsive">
            <table class="table mb-0" id="table1">
            <thead>
            <tr>
            <th>Name</th>
            <th>Phone</th>
            <th>City</th>
            <th>Status</th>
            </tr>
            </thead>
            <tbody>
            <tr>
            <td>Graiden</td>
            <td>076 4820 8838</td>
            <td>Offenburg</td>
            <td>
            <span class="badge bg-success">Active</span>
            </td>
            </tr>
            <tr>
            <td>Dale</td>
            <td>0500 527693</td>
            <td>New Quay</td>
            <td>
            <span class="badge bg-success">Active</span>
            </td>
            </tr>
            <tr>
            <td>Nathaniel</td>
            <td>(012165) 76278</td>
            <td>Grumo Appula</td>
            <td>
            <span class="badge bg-danger">Inactive</span>
            </td>
            </tr>
            </tbody>
            </table>
            <br />
            <div class="col-6 d-flex justify-content-end">
            <a href="#" class="btn btn-primary round">See More</a>
            </div>
            <br />
            </div>
            </div>
            </div>
            </div>*@
            <div class="col-md-6">
                <div class="card ">
                    <div class="card-header">
                        <h4>Your Order Number of Category</h4>
                    </div>
                    <div class="card-body" style="position: relative;">
                        <div id="piechart" style="min-width: 500px; min-height: 328.7px"></div>
                        <div class="resize-triggers"><div class="expand-trigger"><div style="width: 389px; height: 469px;"></div></div><div class="contract-trigger"></div></div>
                    </div>
                </div>
            </div>
        </div>
    </section>
</div>
<script src="https://code.jquery.com/jquery-3.6.3.js"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script>
    $("#btnSaveChange").hide();
    $("#btnSaveChangePass").hide();
    $("#btnCancel").hide();
    $("#btnCancelPass").hide();

    function myFunction() {
        document.getElementById("readonlyInputName").readOnly = false;
        document.getElementById("readonlyInputUser").readOnly = false;
        document.getElementById("readonlyInputEmail").readOnly = false;
        document.getElementById("readonlyInputPhone").readOnly = false;
        $("#btnChange").hide();
        $("#btnSaveChange").show();
        $("#btnCancel").show();
    }
    function functionSave() {
        $.ajax({
            type: "Post",
            url: "/Accountant/ChangeProfile?name=" + $("#readonlyInputName").val()
                + "&&username=" + $("#readonlyInputUser").val()
                + "&&email=" + $("#readonlyInputEmail").val()
                + "&&phone=" + $("#readonlyInputPhone").val(),  //remember change the controller to your owns.
            success: function (data) {
                window.location.reload();
            },
            error: function (response) {
                console.log(response.responseText);
            }
        });
    };
    $("#alertMessPass").hide();
    $("#alertMess").hide();

    function myFunctionPass() {
        document.getElementById("readonlyInputOldPass").readOnly = false;
        document.getElementById("readonlyInputNewPass").readOnly = false;
        document.getElementById("readonlyInputConfirmPass").readOnly = false;
        $("#btnChangePass").hide();
        $("#btnSaveChangePass").show();
        $("#btnCancelPass").show();
    }
    function functionSavePass() {
        if ($("#readonlyInputOldPass").val() == @Model.Password) {
            $("#alertMessPass").hide();

            if ($("#readonlyInputConfirmPass").val() == $("#readonlyInputNewPass").val()) {
                $.ajax({
                    type: "Post",
                    url: "/Accountant/ChangePass?newPass=" + $("#readonlyInputNewPass").val(),  //remember change the controller to your owns.
                    success: function (data) {
                        window.location.reload();
                    },
                    error: function (response) {
                        console.log(response.responseText);
                    }
                });
            }
            else {
                $("#alertMess").show();
            }
        } else {
            $("#alertMessPass").show();
        }
    };
    function functionCancelProfile() {
        document.getElementById("readonlyInputName").readOnly = true;
        document.getElementById("readonlyInputUser").readOnly = true;
        document.getElementById("readonlyInputEmail").readOnly = true;
        document.getElementById("readonlyInputPhone").readOnly = true;
        $("#btnChange").show();
        $("#btnSaveChange").hide();
        $("#btnCancel").hide();
    }
    function functionCancelPass() {
        document.getElementById("readonlyInputOldPass").readOnly = true;
        document.getElementById("readonlyInputNewPass").readOnly = true;
        document.getElementById("readonlyInputConfirmPass").readOnly = true;
        $("#btnChangePass").show();
        $("#btnSaveChangePass").hide();
        $("#btnCancelPass").hide();
    }
</script>

<script type="text/javascript">
    google.charts.load('current', { 'packages': ['corechart'] });
    //$(window).resize(function () {
    //    drawChart();
    //});
    google.charts.setOnLoadCallback(drawChart);
    google.charts.setOnLoadCallback(drawChartOrder);
    function drawChart() {
        var jsonList = @Json.Serialize(Model);
        $(function () {
            $.ajax(
                {
                    type: 'GET',
                    url: '/Accountant/GetRevenueChartJson',
                    success: function (chartsdata) {
                        var Data = chartsdata.jsonList;
                        var data = new google.visualization.DataTable();
                        data.addColumn('string', 'Month');
                        data.addColumn('number', 'Revenue');
                        for (var i = 0; i < Data.length; i++) {
                            data.addRow([Data[i].monthDate, Data[i].sumRevenue]);
                        }
                        var chart = new google.visualization.LineChart(document.getElementById('curve_chart'));
                        chart.draw(data, {
                            title: '',
                            curveType: 'function',
                            legend: { position: 'bottom' },
                            fontSize: 16,
                        });
                    },
                    error: function () {
                        alert('Error load data')
                    }
                })
        });
    }
    function drawChartOrder() {
        var jsonList = @Json.Serialize(Model);
        $(function () {
            $.ajax(
                {
                    type: 'GET',
                    url: '/Accountant/GetOrderChartJson',
                    success: function (chartsdata) {
                        var Data = chartsdata.jsonList;
                        var data = new google.visualization.DataTable();
                        data.addColumn('string', 'Month');
                        data.addColumn('number', 'Order');
                        for (var i = 0; i < Data.length; i++) {
                            data.addRow([Data[i].monthDate, Data[i].countOrder]);
                        }
                        var chart = new google.visualization.LineChart(document.getElementById('order_chart'));
                        chart.draw(data, {
                            title: '',
                            curveType: 'function',
                            legend: { position: 'bottom' },
                            fontSize: 16,
                        });
                    },
                    error: function () {
                        alert('Error load data')
                    }
                })
        });
    }
    google.charts.setOnLoadCallback(drawChartEarn);

    function drawChartEarn() {

        var jsonList = @Json.Serialize(Model);
        $(function () {
            $.ajax(
                {
                    type: 'GET',
                    url: '/Accountant/GetPieChartJson',
                    success: function (chartsdata) {
                        var Data = chartsdata.jsonList;
                        var data = new google.visualization.DataTable();
                        data.addColumn('string', 'Task');
                        data.addColumn('number', 'Count');
                        for (var i = 0; i < Data.length; i++) {
                            data.addRow([Data[i].nameCategory, Data[i].countOrder]);
                        }
                        var chart = new google.visualization.PieChart(document.getElementById('piechart'));
                        chart.draw(data, {
                            title: '',
                            fontSize: 16,
                        });
                    },
                    error: function () {
                        alert('Error load data')
                    }
                })
        });


        var data = google.visualization.arrayToDataTable([
            ['Task', 'Hours per Day'],
            ['Work', 11],
            ['Eat', 2],
            ['Watch TV', 2],
            ['Sleep', 7]
        ]);

        var options = {
            title: '',
            fontSize: 16,
        };

        var chart = new google.visualization.PieChart(document.getElementById('piechart'));

        chart.draw(data, options);
    }
</script>
